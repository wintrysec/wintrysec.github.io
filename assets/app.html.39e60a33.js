import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,a as n,b as s,d as t,e,r as c}from"./app.c527752f.js";const l="/assets/clip_image002.d6a903d8.gif",u="/assets/clip_image004.dd9d60d8.gif",r="/assets/clip_image006.bd693c76.gif",d="/assets/clip_image008.837439bf.gif",k="/assets/clip_image010.64d7f7b4.gif",v="/assets/clip_image012.9c32a944.gif",m="/assets/clip_image014.8cf88bdc.gif",g="/assets/clip_image016.e62e027c.gif",h="/assets/clip_image018.8d3830fa.gif",b="/assets/clip_image020.8cdb89c8.gif",f="/assets/clip_image022.fd0c45da.gif",_="/assets/clip_image024.9d9079d9.gif",y="/assets/clip_image026.c6f1ff9f.gif",x="/assets/clip_image028.93048bdf.gif",q={},S=n("h2",{id:"apk敏感信息收集",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#apk敏感信息收集","aria-hidden":"true"},"#"),s(" APK敏感信息收集")],-1),w=n("h3",{id:"使用工具快速扫描",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用工具快速扫描","aria-hidden":"true"},"#"),s(" 使用工具快速扫描")],-1),C={href:"https://github.com/dwisiswant0/apkleaks",target:"_blank",rel:"noopener noreferrer"},P=e(`<p>可以发现比如云主机的key，服务器真实IP、其他服务的密钥等信息。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>python apkleaks<span class="token punctuation">.</span>py <span class="token operator">-</span>f  <span class="token string">&quot;C:\\Users\\Administrator\\Desktop\\app\\test.apk&quot;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+l+'" alt="img" loading="lazy"></p><h3 id="反编译apk" tabindex="-1"><a class="header-anchor" href="#反编译apk" aria-hidden="true">#</a> 反编译APK</h3><p>一个apk包的本质是一个zip格式的压缩包，我们可以直接使用解压缩工具进行解压。</p><h4 id="_1-检查-classes-dex-硬编码" tabindex="-1"><a class="header-anchor" href="#_1-检查-classes-dex-硬编码" aria-hidden="true">#</a> 1）检查 classes.dex 硬编码</h4>',6),A={href:"https://mt2.cn",target:"_blank",rel:"noopener noreferrer"},j=e('<p>重点查看classes.dex文件反编译后是否有硬编码的敏感信息。</p><p><strong>APK文件结构如下</strong></p><p><img src="'+u+'" alt="img" loading="lazy"></p><h4 id="_2-检查sharedpreferences-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-检查sharedpreferences-配置文件" aria-hidden="true">#</a> 2）检查SharedPreferences 配置文件</h4><p>检查客户端程序存储在手机中的 SharedPreferences 配置文件是否存储、泄露敏感信息。</p><p>可以使用MT管理器查看（手机需要root）</p><p>• 用MT管理器查看下APK的应用包名</p><p>• 查看路径/data/data/&lt;应用包名&gt;/shared_prefs/&lt;应用包名&gt;_preferences.xml</p><p>• 可以查看保存的SharedPreferences键值对信息</p><p><img src="'+r+'" alt="img" loading="lazy"></p><h4 id="_3-检查sqlite数据库" tabindex="-1"><a class="header-anchor" href="#_3-检查sqlite数据库" aria-hidden="true">#</a> 3）检查SQLite数据库</h4><p>检查客户端程序存储在手机中的SQLite 数据库文件是否保存、泄漏敏感信息。</p><p>将路径/data/data/&lt;应用包名&gt;/databases/下的sqlite3类型的数据库文件</p><p>用文件管理器导出来用可视化工具查看</p><p><img src="'+d+'" alt="img" loading="lazy"></p><p><img src="'+k+`" alt="img" loading="lazy"></p><h4 id="_4-检查logcat日志" tabindex="-1"><a class="header-anchor" href="#_4-检查logcat日志" aria-hidden="true">#</a> 4）检查logcat日志</h4><p>APP客户端本地 log 运行日志是否打印、泄露用户敏感信息（使用adb即可查看）。</p><p>• 按照应用过滤日志</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>pm list packages <span class="token operator">-</span>3   <span class="token comment">#查看非系统的第三方应用包名</span>
logcat <span class="token punctuation">|</span> grep &lt;应用包名或者关键字&gt;  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+v+'" alt="img" loading="lazy"></p><p>然后运行要检查的APP即可实时查看日志。</p><h2 id="app抓包" tabindex="-1"><a class="header-anchor" href="#app抓包" aria-hidden="true">#</a> APP抓包</h2><h3 id="一、设置代理" tabindex="-1"><a class="header-anchor" href="#一、设置代理" aria-hidden="true">#</a> 一、设置代理</h3><p><strong>1）Burp代理设置为局域网的IP</strong></p><p><img src="'+m+'" alt="img" loading="lazy"></p><p><strong>2）模拟器设置桥接模式，和代理工具Burp所在宿主机处于同一局域网</strong></p><p><img src="'+g+'" alt="img" loading="lazy"></p><p>设置模拟器的网络代理为Burp的地址</p><p><img src="'+h+'" alt="img" loading="lazy"></p><p><strong>3）模拟器访问Burp代理的IP，下载并安装CA证书</strong></p><p><img src="'+b+'" alt="img" loading="lazy"></p><p>下载完先把后缀改为cer</p><p>夜神模拟器是在WLAN设置中点高级安装证书</p><p><img src="'+f+'" alt="img" loading="lazy"></p><p>或者有的模拟器是从设置中搜索安全，打开加密与凭据选项选择从SD卡安装证书</p><p><img src="'+_+'" alt="img" loading="lazy"></p><p><img src="'+y+'" alt="img" loading="lazy"></p><h3 id="二、安装系统证书" tabindex="-1"><a class="header-anchor" href="#二、安装系统证书" aria-hidden="true">#</a> 二、安装系统证书</h3><p><img src="'+x+`" alt="img" loading="lazy"></p><p>抓到的HTTPS包都是乱码，因为安卓高版本即7.0之后，app可以只信任指定证书和系统内置的证书，后续用户安装的证书是不生效的。所以需要将Burp的CA证书安装到系统内部。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code> <span class="token comment"># 转为pem格式</span>
openssl x509 <span class="token operator">-</span>inform DER <span class="token operator">-in</span> cacert<span class="token punctuation">.</span>der <span class="token operator">-</span>out cacert<span class="token punctuation">.</span>pem

<span class="token comment"># 重命名为&lt;hash值&gt;.0</span>
<span class="token function">mv</span> cacert<span class="token punctuation">.</span>pem \`openssl x509 <span class="token operator">-</span>inform PEM <span class="token operator">-</span>subject_hash_old <span class="token operator">-in</span> cacert<span class="token punctuation">.</span>pem <span class="token punctuation">|</span>head <span class="token operator">-</span>1\`<span class="token string">&#39;.0&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将xxxhash.0证书文件复制到系统根信任证书目录即可</p><p>或者直接使用面具的movecert模块</p>`,44),I={href:"https://github.com/ys1231/MoveCertificate",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"加固绕过",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#加固绕过","aria-hidden":"true"},"#"),s(" 加固绕过")],-1),T=n("h3",{id:"root检测绕过",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#root检测绕过","aria-hidden":"true"},"#"),s(" root检测绕过")],-1),L={href:"https://github.com/topjohnwu/Magisk",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/LSPosed/LSPosed.github.io/releases",target:"_blank",rel:"noopener noreferrer"},B=e(`<p>1）用adb将shamiko推送到手机上</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb push Shamiko-v1.0.1-300-release.zip /sdcard/Download/Shamiko-v1.0.1-300-release.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）打开面具，进入模块，选择从本地安装，将zip刷入，点击重启</p><p>3）再次打开面具，点击右上角齿轮，配置排除列表，将绕过的APP排除，打开APP就没有提示了</p><h3 id="代理检测绕过" tabindex="-1"><a class="header-anchor" href="#代理检测绕过" aria-hidden="true">#</a> 代理检测绕过</h3>`,5),F={href:"https://github.com/ys1231/appproxy",target:"_blank",rel:"noopener noreferrer"},K=n("h3",{id:"frida检测绕过",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frida检测绕过","aria-hidden":"true"},"#"),s(" frida检测绕过")],-1),J={href:"https://github.com/frida/frida",target:"_blank",rel:"noopener noreferrer"},D=e(`<p>windows安装客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> Frida 
pip3 <span class="token function">install</span> frida-tools
pip3 <span class="token function">install</span> objection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ssl-pinning证书绑定绕过" tabindex="-1"><a class="header-anchor" href="#ssl-pinning证书绑定绕过" aria-hidden="true">#</a> ssl Pinning证书绑定绕过</h3><p>有些APP有预埋证书验证，遇到Burp的证书不能通过验证还是不能抓包。</p><p>使用frida进行hook绕过，使用通用的绕过脚本或自己编写。</p><p>1）查找设备的arch版本，下载对应的frida</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb shell getprop ro.product.cpu.abi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）推送frida到手机上</p><p>下载后解压，把解压后的文件使用adb命令上传到设备</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#推送到设备</span>
adb push C:<span class="token punctuation">\\</span>frida-server /data/local/tmp

<span class="token comment">#授予执行权限</span>
adb shell <span class="token function">chmod</span> <span class="token number">777</span> /data/local/tmp/frida-server

<span class="token comment">#启动firdas-erver</span>
adb shell /data/local/tmp/frida-server <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4）打开新终端，列出服务列表，找到包名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>frida-ps <span class="token parameter variable">-U</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3）使用Hook注入脚本</p>`,13),E={href:"https://github.com/fdciabdul/Frida-Multiple-Bypass",target:"_blank",rel:"noopener noreferrer"},N=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#客户端注入</span>
frida <span class="token parameter variable">-U</span> <span class="token parameter variable">-f</span> com.package.name --no-pause <span class="token parameter variable">-l</span> C:<span class="token punctuation">\\</span>bypass.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个hook脚本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 
   Android SSL Re-pinning frida script v0.2 030417-pier 

   $ adb push burpca-cert-der.crt /data/local/tmp/cert-der.crt
   $ frida -U -f it.app.mobile -l frida-android-repinning.js --no-pause

   https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/
   
   UPDATE 20191605: Fixed undeclared var. Thanks to @oleavr and @ehsanpc9999 !
*/</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[.] Cert Pinning Bypass/Re-Pinning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	    <span class="token keyword">var</span> CertificateFactory <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.security.cert.CertificateFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> FileInputStream <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.io.FileInputStream&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> BufferedInputStream <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.io.BufferedInputStream&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> X509Certificate <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.security.cert.X509Certificate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> KeyStore <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.security.KeyStore&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> TrustManagerFactory <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.TrustManagerFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> SSLContext <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.SSLContext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	    <span class="token comment">// Load CAs from an InputStream</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Loading our CA...&quot;</span><span class="token punctuation">)</span>
	    <span class="token keyword">var</span> cf <span class="token operator">=</span> CertificateFactory<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;X.509&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    
	    <span class="token keyword">try</span> <span class="token punctuation">{</span>
	    	<span class="token keyword">var</span> fileInputStream <span class="token operator">=</span> FileInputStream<span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;/data/local/tmp/cert-der.crt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token punctuation">}</span>
	    <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[o] &quot;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token punctuation">}</span>
	    
	    <span class="token keyword">var</span> bufferedInputStream <span class="token operator">=</span> BufferedInputStream<span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span>fileInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
	  	<span class="token keyword">var</span> ca <span class="token operator">=</span> cf<span class="token punctuation">.</span><span class="token function">generateCertificate</span><span class="token punctuation">(</span>bufferedInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    bufferedInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">var</span> certInfo <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">cast</span><span class="token punctuation">(</span>ca<span class="token punctuation">,</span> X509Certificate<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[o] Our CA Info: &quot;</span> <span class="token operator">+</span> certInfo<span class="token punctuation">.</span><span class="token function">getSubjectDN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	    <span class="token comment">// Create a KeyStore containing our trusted CAs</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Creating a KeyStore for our CA...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> keyStoreType <span class="token operator">=</span> KeyStore<span class="token punctuation">.</span><span class="token function">getDefaultType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> keyStore <span class="token operator">=</span> KeyStore<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>keyStoreType<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    keyStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    keyStore<span class="token punctuation">.</span><span class="token function">setCertificateEntry</span><span class="token punctuation">(</span><span class="token string">&quot;ca&quot;</span><span class="token punctuation">,</span> ca<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    
	    <span class="token comment">// Create a TrustManager that trusts the CAs in our KeyStore</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Creating a TrustManager that trusts the CA in our KeyStore...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> tmfAlgorithm <span class="token operator">=</span> TrustManagerFactory<span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">var</span> tmf <span class="token operator">=</span> TrustManagerFactory<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>tmfAlgorithm<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    tmf<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>keyStore<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Our TrustManager is ready...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Hijacking SSLContext methods now...&quot;</span><span class="token punctuation">)</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Waiting for the app to invoke SSLContext.init()...&quot;</span><span class="token punctuation">)</span>

	   	SSLContext<span class="token punctuation">.</span>init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java.security.SecureRandom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	   		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[o] App invoked javax.net.ssl.SSLContext.init...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   		SSLContext<span class="token punctuation">.</span>init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java.security.SecureRandom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> tmf<span class="token punctuation">.</span><span class="token function">getTrustManagers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	   		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[+] SSLContext initialized with our custom TrustManager!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   	<span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function R(U,V){const a=c("ExternalLinkIcon");return o(),i("div",null,[S,w,n("p",null,[s("推荐 apkleaks "),n("a",C,[s("https://github.com/dwisiswant0/apkleaks"),t(a)])]),P,n("p",null,[s("使用"),n("a",A,[s("MT管理器"),t(a)]),s("查看apk，检查apk包中是否存在硬编码的敏感信息。")]),j,n("p",null,[n("a",I,[s("https://github.com/ys1231/MoveCertificate"),t(a)])]),M,T,n("p",null,[s("通过"),n("a",L,[s("Magisk"),t(a)]),s("本身的排除列表或者"),n("a",z,[s("Shamiko"),t(a)]),s("插件来绕过。")]),B,n("p",null,[s("使用VPN代理："),n("a",F,[s("https://github.com/ys1231/appproxy"),t(a)])]),K,n("p",null,[n("a",J,[s("https://github.com/frida/frida"),t(a)]),s(" 现已经支持自动构建反检测")]),D,n("p",null,[n("a",E,[s("https://github.com/fdciabdul/Frida-Multiple-Bypass"),t(a)])]),N])}const H=p(q,[["render",R],["__file","app.html.vue"]]);export{H as default};
